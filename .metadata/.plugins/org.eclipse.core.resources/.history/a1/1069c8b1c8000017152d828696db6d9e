package pc.petko.main;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.Random;

public class SmartEnemy extends GameObject{
	
	private Handler handler;
	private GameObject player;
	
	public SmartEnemy(int x, int y, ID id, Handler handler) {
		super(x, y, id);
		this.handler = handler;
		
		for (int i = 0; i < handler.object.size(); i++) {
			if (handler.object.get(i).getId() == ID.Player) {
				player = handler.object.get(i);
			}
		}
	}

	@Override
	public void tick() {
		x += velX; 
		y += velY;
		
		float diffX = x - player.getX() - 16;
		float diffY = y - player.getY() - 16;	
		float distance = (float) Math.sqrt((x - player.getX()) * (x - player.getVelX()) + (y - player.getY()) * (y - player.getY()));
		
		velX = ((-1 / distance) * diffX);
		velX = ((-1 / distance) * diffY);
		
		// Game dimension so the enemy doesn't leave the screen
		if (y <= 0 || y >= Game.HEIGHT - 34) velY *= -1; // reversing the velocity
		if (x <= 0 || x >= Game.WIDTH - 16) velX *= -1;
		
		handler.object.add(new Trail((int)x,(int) y, ID.Trail, handler, Color.green, 16, 16, 0.02f));
	}

	@Override
	public void render(Graphics g) {
		g.setColor(Color.green);
		g.fillRect((int)x,(int) y, 16, 16);
	}

	@Override
	public Rectangle getBounds() {	
		return new Rectangle((int)x,(int) y, 16, 16);
	}
	
}
